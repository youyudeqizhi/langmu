{"version":3,"file":"static/js/391.f1462395.chunk.js","mappings":"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","sources":["webpack://stafor_suny/./src/componets/button/index.module.less?074d","componets/button/index.jsx","webpack://stafor_suny/./src/page/dataDictionarySet/setting.less?dada","page/dataDictionarySet/setting.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"text\":\"index_text__G9w71\"};","import {useState, useEffect, useMemo, useRef} from 'react';\nimport styles from './index.module.less';\nimport { Button } from 'antd';\nconst Xbutton = (prop) => {\n    let { children, styleObj, type, onClick } = prop;\n    return (\n        <>\n         {\n            type === 'text' && <Button type='text' onClick={onClick} style={styleObj} className={styles.text}>{children}</Button>\n         }\n        </>\n    )\n};\nexport default Xbutton;","// extracted by mini-css-extract-plugin\nexport default {\"settingDiv\":\"setting_settingDiv__Q4Mwb\",\"baseBack\":\"setting_baseBack__+aSRy\",\"ActiveKeySet\":\"setting_ActiveKeySet__wfPNk\",\"DictionariesButton\":\"setting_DictionariesButton__2h0yY\",\"import\":\"setting_import__FCqo3\",\"search\":\"setting_search__wPY-i\",\"roleTable\":\"setting_roleTable__Y045F\",\"save\":\"setting_save__BjUdM\",\"textbut\":\"setting_textbut__Xhr7R\",\"settingFooter\":\"setting_settingFooter__TH2lF\"};","\nimport React from 'react';\nimport {useEffect,useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport {\n    Tabs,\n    Button,\n    Input,\n    Col, \n    Form, \n    Row, \n    Pagination,\n    Table,\n    Modal,\n    DatePicker,\n    Select\n} from 'antd';\nimport style from './setting.less';\nimport Xbutton from '../../componets/button/index';\n\nlet sourData = [\n    {\n        key: '1',\n        itemCode:2222,\n        itemName:'hhhh',\n        itemValue:'kkk',\n        lastOperator:'孙引',\n        createdTime:'2022-7-20',\n        updatedTime:'2022-7-20',\n        status:'停用',\n        sort:1,\n        remark:'1111111111',\n        tags: ['nice', 'developer'],\n    },\n   \n];\nlet sourDataList = [\n    {\n        key: '1',\n        operationField:'哇哇哇哇',\n        itemCode:'哈哈哈',\n        operationTime:'2022-7-22',\n        operator:'孙引',\n        tags: ['nice', 'developer'],\n    }\n]\nconst { RangePicker } = DatePicker;\nconst { TabPane } = Tabs;\nlet labelCol = {\n    style: {\n        width: '70px'\n    }\n};\nconst Setting = () => {\n    const [formUser] = Form.useForm();\n    let [loading, setLoading] = useState(false);\n    let [data, setData] = useState([]);\n    let [dataList, setDataList] = useState([]);\n    let [editObj, setEditObj] = useState({})\n    let [isedit, setIsedit] = useState(false);\n    let [isModalVisible, setIsModalVisible] = useState(false);\n    const navigate = useNavigate();\n    const { state } = useLocation();\n    const { Option } = Select;\n    let [activeKey, setActiveKey] = useState(state.type);\n    const [madolForm] = Form.useForm();\n    const getList = () => {\n        setLoading(true)\n        let timer = setTimeout(() => {\n            setData(sourData);\n            setDataList(sourDataList);\n            setLoading(false);\n            clearTimeout(timer)\n        }, 100);\n    };\n    const onFinish = (values) => {\n        console.log('Received values of form: ', values);\n    }\n    useEffect(() => {\n        getList();\n    }, [])\n    useEffect(() => {\n        console.log(editObj, 'editObj')\n    }, [editObj])\n    const CancelModal = () => {\n        madolForm.resetFields();\n        setIsedit(false)\n        setIsModalVisible(false);\n    }\n    const madolFinesh = (val) => {\n        console.log(val)\n    }\n    const showTotal = (total) => `共 ${total} 条`;\n    const getFooter = () => (\n        <>\n            <Button type=\"primary\" style={{marginRight: '10px'}} className={style.save} onClick={() => {\n                madolForm.validateFields().then(val => {\n                    console.log(val, 'val')\n                }).catch((erre) => {\n                    console.log(erre, 'erre')\n                });\n            }}>保存</Button>\n            {\n                !isedit ? (<Button style={{marginRight: '10px'}} htmlType=\"submit\">保存并新增</Button>) : ''\n            }\n            <Button onClick={CancelModal}>取消</Button>\n        </>\n    )\n    const columns = [\n        {\n          title: '字典编码',\n          dataIndex: 'itemCode',\n          key: 'itemCode',\n          render: (text, obj) => {\n            return (\n                <span>{text}</span>\n            )\n            },\n        },\n        {\n          title: '字典标签',\n          dataIndex: 'itemName',\n          key: 'itemName',\n          render: (text, obj) => {\n            return (\n                <span>{text}</span>\n            )\n            },\n        },\n        {\n          title: '字典键值',\n          dataIndex: 'zidianlei',\n          key: 'zidianname',\n          render: (text, obj) => {\n            return (\n                <span>{text}</span>\n            )\n            },\n        },\n        {\n            title: '排序',\n            dataIndex: 'sort',\n            key: 'sort',\n            sorter: (a, b) => a.sort - b.sort,\n            render: (text, obj) => {\n            return (\n                <span>{text}</span>\n              )\n            },\n        },\n        {\n            title: '状态',\n            dataIndex: 'status',\n            key: 'status',\n            render: (text, obj) => {\n            return (\n                <span>{text}</span>\n              )\n            },\n        },\n        {\n            title: '备注',\n            dataIndex: 'remark',\n            key: 'remark',\n            render: (text, obj) => {\n            return (\n                <span>{text}</span>\n              )\n            },\n        },\n        {\n            title: '创建时间',\n            dataIndex: 'createdTime',\n            key: 'createdTime',\n            sorter: (a, b) => a.createdTime - b.createdTime,\n            render: (text, obj) => {\n            return (\n                <span>{text}</span>\n              )\n            },\n        },\n        {\n            title: '更新时间',\n            dataIndex: 'updatedTime',\n            key: 'updatedTime',\n            sorter: (a, b) => a.updatedTime - b.updatedTime,\n            render: (text, obj) => {\n            return (\n                <span>{text}</span>\n              )\n            },\n        },\n        {\n            title: '最后操作人',\n            dataIndex: 'lastOperator',\n            key: 'lastOperator',\n            render: (text, obj) => {\n            return (\n                <span>{text}</span>\n              )\n            },\n        },\n        {\n          title: '操作',\n          dataIndex: 'zidianname',\n          key: 'zidianname',\n          render: (text, obj) => {\n            return (\n                <>\n                   <Xbutton  type=\"text\">停用</Xbutton>\n                    <Xbutton onClick={() => {\n                        let { zidianname, zidianlei } = obj;\n                        setEditObj({ zidianname, zidianlei })\n                        setIsedit(true);        \n                        madolForm.setFieldsValue({ zidianname, zidianlei });        \n                        setIsModalVisible(true);\n                    }} type=\"text\">编辑</Xbutton>\n                   \n                </>\n            )\n            },\n        }\n      ];\n    const columnsDictionaries = [\n        {\n            title: '操作字段',\n            dataIndex: 'operationField',\n            key: 'operationField',\n            render: (text, obj) => {\n            return (\n                <span>{text}</span>\n            )\n            },\n        },\n        {\n            title: '操作事件',\n            dataIndex: 'itemCode',\n            key: 'itemCode',\n            render: (text, obj) => {\n            return (\n                <span>{text}</span>\n            )\n            },\n        },\n        {\n            title: '操作时间',\n            dataIndex: 'operationTime',\n            key: 'operationTime',\n            defaultSortOrder:'descend',\n            sorter: (a, b) => a.operationTime - b.operationTime,\n            render: (text, obj) => {\n            return (\n                <span>{text}</span>\n            )\n            },\n        },\n        {\n            title: '操作人',\n            dataIndex: 'operator',\n            key: 'operator',\n            render: (text, obj) => {\n            return (\n                <span>{text}</span>\n            )\n            },\n        },\n\n    ];\n\n    return (\n      <div className={style.settingDiv}>\n        <Modal title=\"新增字典\" visible={isModalVisible} onCancel={CancelModal}\n            footer={false}\n            >\n                <Form\n                form={madolForm}\n                name=\"advanced_search\"\n                className=\"ant-advanced-search-form\"\n                onFinish={madolFinesh}\n                >\n                    <Form.Item\n                        name=\"itemName\"\n                        label=\"字典标签\"\n                        labelCol={labelCol}\n                        validateTrigger=\"onBlur\"\n                        rules={[{ required: true, message: '请输入字典标签' }]}\n                        >\n                            <Input showCount  maxLength={20}/>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"itemValue\"\n                        label=\"字典键值\"\n                        labelCol={labelCol}\n                        validateTrigger=\"onBlur\"\n                        rules={[{ required: true, message: '请输入字典键值' }]}\n                        >\n                        <Input showCount  maxLength={20}/>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"sort\"\n                        label=\"排序\"\n                        labelCol={labelCol}\n                        rules={[{ required: false, message: '',pattern: new RegExp(/^[0-9]\\d*$/,\"g\")}]}\n                        >\n                        <Input defaultValue = '0'/>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"market\"\n                        label=\"备注\"\n                        labelCol={labelCol}\n                        rules={[{ required: false, message: '请输入备注' }]}\n                        >\n                        <Input showCount  maxLength={20}/>\n                    </Form.Item>\n                    {getFooter()}\n                </Form>\n        </Modal>\n         <Tabs defaultActiveKey=\"1\" activeKey={activeKey} onChange={(e) => {\n            setActiveKey(e)\n         }}>\n            <TabPane tab=\"字典值设置\" key=\"1\" >\n                <div className={style.ActiveKeySet} >\n                    <header>\n                        <Button type=\"primary\" className={style.DictionariesButton} onCancel={CancelModal}\n                        onClick={() =>{\n                            setIsModalVisible(true)\n                        }} >新增字典值</Button>\n                        <Button className={style.import}>导出</Button>\n                    </header>\n                    <main>\n                        <Form\n                            form={formUser}\n                            name=\"advanced_search\"\n                            className=\"ant-advanced-search-form\"\n                            onFinish={onFinish}\n                            >\n                            <Row gutter={24}>\n                                <Col span={6}>\n                                    <Form.Item\n                                        name=\"dictId\"\n                                        label=\"字典名称：\"\n                                        >\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={6}>\n                                    <Form.Item\n                                        name=\"itemName\"\n                                        label=\"字典标签：\"\n                                        >\n                                        <Input placeholder=\"请输入字典标签\"/>\n                                    </Form.Item>\n                                </Col>\n                                <Col span={6}>\n                                    <Form.Item\n                                        name=\"itemValue\"\n                                        label=\"字典键值：\"\n                                        >\n                                        <Input placeholder=\"请输入字典键值\"/>\n                                    </Form.Item>\n                                </Col>\n                                <Col span={6}>\n                                    <Form.Item\n                                        name=\"status\"\n                                        label=\"字典状态：\"\n                                        >\n                                        <Input.Group compact>\n                                            <Select defaultValue=\"全部\" style={{ width: '80%' }}>\n                                                <Option>全部</Option>\n                                                <Option value=\"1\">已启用</Option>\n                                                <Option value=\"0\">已停用</Option>\n                                            </Select>\n                                        </Input.Group>\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                        \n                            <Row>\n                                <Button type=\"primary\" className={style.search} htmlType=\"submit\">查询</Button>\n                                <Button>重置</Button>\n                            </Row>\n                        </Form>\n                            \n                    </main>\n                    <div className={style.table}>\n                        <Table columns={columns} loading={loading} dataSource={data} pagination={false}/>\n                        <Pagination size=\"small\" className={style.roleTable} total={50} showTotal={showTotal} showSizeChanger showQuickJumper/>\n                    </div>\n                </div>\n            </TabPane>\n            <TabPane tab=\"字典日志\" key=\"2\">\n                <div className={style.ActiveKeySet}>\n                    <main>\n                        <Form\n                            form={formUser}\n                            name=\"advanced_search\"\n                            className=\"ant-advanced-search-form\"\n                            onFinish={onFinish}\n                            >\n                            <Row gutter={24}>\n                                <Col span={8}>\n                                    <Form.Item\n                                        name=\"fields\"\n                                        label=\"操作字段：\"\n                                        labelCol={labelCol}\n                                        >\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={8}>\n                                    <Form.Item\n                                        name=\"operationStartTime\"\n                                        label=\"操作时间：\"\n                                        labelCol={labelCol}\n                                        >\n                                        <RangePicker\n                                            showTime={{\n                                                format: 'HH:mm',\n                                            }}\n                                            format=\"YYYY-MM-DD HH:mm\"\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={8}>\n                                    <Button type=\"primary\" className={style.search} htmlType=\"submit\">查询</Button>\n                                    <Button>重置</Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </main>\n                    <div className={style.table}>\n                        <Table columns={columnsDictionaries} loading={loading} dataSource={dataList} pagination={false}/>\n                        <Pagination size=\"small\" className={style.roleTable} total={50} showTotal={showTotal} showSizeChanger showQuickJumper/>\n                    </div>\n                </div>\n            </TabPane>\n        </Tabs>\n        <footer className={style.settingFooter}>\n            <Button className={style.import} onClick={() => {\n                navigate(-1)\n            }}>返回</Button>\n        </footer>\n      </div>\n    )\n}\nexport default Setting;"],"names":["prop","children","styleObj","type","onClick","style","className","styles","sourData","key","itemCode","itemName","itemValue","lastOperator","createdTime","updatedTime","status","sort","remark","tags","sourDataList","operationField","operationTime","operator","RangePicker","DatePicker","TabPane","Tabs","labelCol","width","Form","formUser","useState","loading","setLoading","data","setData","dataList","setDataList","editObj","setEditObj","isedit","setIsedit","isModalVisible","setIsModalVisible","navigate","useNavigate","state","useLocation","Option","Select","activeKey","setActiveKey","madolForm","onFinish","values","console","log","useEffect","timer","setTimeout","clearTimeout","getList","CancelModal","resetFields","showTotal","total","columns","title","dataIndex","render","text","obj","sorter","a","b","zidianname","zidianlei","setFieldsValue","columnsDictionaries","defaultSortOrder","visible","onCancel","footer","form","name","val","label","validateTrigger","rules","required","message","showCount","maxLength","pattern","RegExp","defaultValue","marginRight","validateFields","then","catch","erre","htmlType","defaultActiveKey","onChange","e","tab","gutter","span","placeholder","compact","value","dataSource","pagination","size","showSizeChanger","showQuickJumper","showTime","format"],"sourceRoot":""}