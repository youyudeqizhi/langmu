{"version":3,"file":"static/js/330.5393434e.chunk.js","mappings":"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","sources":["webpack://stafor_suny/./src/componets/button/index.module.less?074d","componets/button/index.jsx","webpack://stafor_suny/./src/page/dataDictionarySet/index.less?8346","util/Context.js","componets/Xchild/index.jsx","page/dataDictionarySet/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"text\":\"index_text__G9w71\"};","import {useState, useEffect, useMemo, useRef} from 'react';\nimport styles from './index.module.less';\nimport { Button } from 'antd';\nconst Xbutton = (prop) => {\n    let { children, styleObj, type, onClick } = prop;\n    return (\n        <>\n         {\n            type === 'text' && <Button type='text' onClick={onClick} style={styleObj} className={styles.text}>{children}</Button>\n         }\n        </>\n    )\n};\nexport default Xbutton;","// extracted by mini-css-extract-plugin\nexport default {\"baseBack\":\"index_baseBack__RWfM2\",\"dataDictionarySet\":\"index_dataDictionarySet__j+PpP\",\"DictionariesButton\":\"index_DictionariesButton__eUnua\",\"import\":\"index_import__cc3PN\",\"search\":\"index_search__aybzV\",\"roleTable\":\"index_roleTable__UCaAG\",\"save\":\"index_save__avH5-\",\"textbut\":\"index_textbut__2TiHc\"};","import { createContext } from 'react';\r\nexport const PersonContext = createContext();\r\n\r\n","import React, { useEffect, useImperativeHandle, useContext } from \"react\";\r\nimport { PersonContext } from '../../util/Context';\r\nconst Xchild = (prop, e) => {\r\n    const info = useContext(PersonContext);\r\n    const wocao = (val) => val;\r\n    useEffect(() => {\r\n        console.log(prop, e)\r\n    }, [])\r\n    useImperativeHandle(prop.cRef, () => ({\r\n        wocao\r\n    }))\r\n    return (\r\n        <div>\r\n            这里是Xchild\r\n            info是{\r\n               info.num + '次' \r\n            }\r\n            {\r\n                prop.children\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default Xchild;","import React from 'react';\nimport { useState, useEffect, useMemo, useRef  } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n    Button, \n    Col, \n    Form, \n    Input, \n    Row, \n    DatePicker, \n    Table,\n    Pagination,\n    Modal, //弹框\n    Select,\n    Tooltip,\n } from 'antd';\nimport styles from './index.less';\nimport Xbutton from '@/componets/button/index';\nimport Xchild from '@/componets/Xchild/index';\nimport { PersonContext } from '@/util/Context'\nlet sourData = [\n    {\n        key: '1',\n        id:'1111',\n        name:'孙引22222222222222',\n        status:'启动',\n        updatedTime:\"22222\",\n        type:'停用',\n        remark:\"hdshfiudshfiushfuihdsufhusdihfui\",\n        createdTime:'2022-7-20',\n        itemQty:2,\n        lastOperator:\"hahah\",\n        tags: ['nice', 'developer'],\n    },\n];\nconst { RangePicker } = DatePicker;\n\nlet labelCol = {\n    style: {\n        width: '70px'\n    }\n};\nconst Dictionary = () =>{\n    const [formUser] = Form.useForm();\n    const [madolForm] = Form.useForm();\n    const [info, setInfo] = useState({\n        num: 0,\n        type: 'init'\n    })\n    let [loading, setLoading] = useState(false);\n    let [isModalVisible, setIsModalVisible] = useState(false);\n    let [isedit, setIsedit] = useState(false); // 是否为编辑状态\n    let [editObj, setEditObj] = useState({})\n    let [data, setData] = useState([]);\n    const navigate = useNavigate();\n    let box = useRef();\n    const { Option } = Select;\n    const getList = () => {\n        setLoading(true)\n        let timer = setTimeout(() => {\n            setData(sourData);\n            setLoading(false)\n            clearTimeout(timer)\n        }, 100);\n    };\n    useEffect(() => {\n        getList();\n    }, [])\n    useEffect(() => {\n        console.log(editObj, 'editObj')\n    }, [editObj])\n    const handleOk = () => {\n        console.log('handleOk')\n    }\n  \n    const onFinish = (values) => {\n        console.log('Received values of form: ', values);\n    }\n  \n    const showTotal = (total) => `共 ${total} 条`;\n    const getFooter = () => (\n        <>\n            <Button type=\"primary\" style={{marginRight: '10px'}} className={styles.save} onClick={() => {\n                madolForm.validateFields().then(val => {\n                    console.log(val, 'val')\n                }).catch((erre) => {\n                    console.log(erre, 'erre')\n                });\n            }}>保存</Button>\n            {\n                !isedit ? (<Button style={{marginRight: '10px'}} htmlType=\"submit\">保存并新增</Button>) : ''\n            }\n            <Button onClick={CancelModal}>取消</Button>\n        </>\n    )\n    const madolFinesh = (val) => {\n        console.log(val)\n    }\n    const CancelModal = () => {\n        madolForm.resetFields();\n        setIsedit(false)\n        setIsModalVisible(false);\n    }\n    const columns = [\n        {\n          title: '字典ID',\n          dataIndex: 'id',\n          key: 'id',\n          render: (text, obj) => {\n            return (\n                <span>{text}</span>\n            )\n            },\n        },\n        {\n          title: '字典名称',\n          dataIndex: 'name',\n          key: 'name',\n          reander:(text)=><Tooltip placement='topLeft' title={text}>{text}</Tooltip>\n        //   render: (text, obj) => {\n        //     return (\n        //         <span>{text}</span>\n        //     )\n        //     },\n        },\n        {\n          title: '字典类型',\n          dataIndex: 'type',\n          key: 'type',\n          render: (text, obj) => {\n            return (\n                <span>{text}</span>\n            )\n            },\n        },\n        {\n            title: '字典状态',\n            dataIndex: 'status',\n            key: 'status',\n            render: (text, obj) => {\n              return (\n                  <span>{text}</span>\n              )\n            },\n        },\n        {\n            title: '字典值数量',\n            dataIndex: 'itemQty',\n            key: 'itemQty',\n            render: (text, obj) => {\n              return (\n                  <span>{text}</span>\n              )\n            },\n        },\n        {\n            title: '备注',\n            dataIndex: 'remark',\n            key: 'remark',\n            render: (text, obj) => {\n              return (\n                  <span>{text}</span>\n              )\n            },\n        },\n        {\n            title: '创建时间',\n            dataIndex: 'createdTime',\n            key: 'createdTime',\n            sorter: (a, b) => a.createdTime - b.createdTime,\n            render: (text, obj) => {\n              return (\n                  <span>{text}</span>\n              )\n            },\n        },\n        {\n            title: '更新时间',\n            dataIndex: 'updatedTime',\n            key: 'updatedTime',\n            sorter: (a, b) => a.updatedTime - b.updatedTime,\n            render: (text, obj) => {\n              return (\n                  <span>{text}</span>\n              )\n            },\n        },\n        {\n            title: '最后操作人',\n            dataIndex: 'lastOperator',\n            key: 'lastOperator',\n            render: (text, obj) => {\n              return (\n                  <span>{text}</span>\n              )\n            },\n        },\n        {\n          title: '操作',\n          dataIndex: 'zidianname',\n          key: 'zidianname',\n          render: (text, obj) => {\n            return (\n                <>\n                    <Xbutton  type=\"text\">停用</Xbutton>\n                    <Xbutton onClick={() => {\n                        let { name, type } = obj;\n                        setEditObj({ name, type })\n                        setIsedit(true);        \n                        madolForm.setFieldsValue({ name, type });        \n                        setIsModalVisible(true);\n                    }} type=\"text\">编辑</Xbutton>\n                    <Xbutton type=\"text\" onClick={() => {\n                        navigate('/dataDictionarySetting', { state: {type: '1'} })\n                    }}>设置字典值</Xbutton>\n                    <Xbutton type=\"text\" onClick={() => {\n                        navigate('/dataDictionarySetting', { state: {type: '2'} })\n                    }}>操作日志</Xbutton>\n                </>\n            )\n            },\n        }\n      ];\n   \n    return (\n        <div className={styles.dataDictionarySet}>\n            <Modal title=\"新增字典\" visible={isModalVisible} onOk={handleOk} onCancel={CancelModal}\n            footer={false}\n            >\n                <Form\n                form={madolForm}\n                name=\"advanced_search\"\n                className=\"ant-advanced-search-form\"\n                onFinish={madolFinesh}\n                >\n                    <Form.Item\n                        name=\"name\"\n                        label=\"字典名称\"\n                        labelCol={labelCol}\n                        validateTrigger=\"onBlur\"\n                        rules={[{ required: true, message: '请输入字典名称' }]}\n                        >\n                            <Input showCount  maxLength={20}/>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"type\"\n                        label=\"字典类型\"\n                        validateTrigger=\"onBlur\"\n                        labelCol={labelCol}\n                        rules={[{ required: true, message: '请输入字典类型' }]}\n                        >\n                        <Input showCount  maxLength={20}/>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"market\"\n                        label=\"备注\"\n                        labelCol={labelCol}\n                        rules={[{ required: false, message: '请输入备注' }]}\n                        >\n                        <Input showCount  maxLength={20}/>\n                    </Form.Item>\n                    {getFooter()}\n                </Form>\n            </Modal>\n            <header>\n                <Button type=\"primary\" className={styles.DictionariesButton} onClick={() => {\n                    setIsModalVisible(true)\n                }}>新增字典</Button>\n                <Button className={styles.import}>导出</Button>\n            </header>\n            <main>\n                <Form\n                    form={formUser}\n                    name=\"advanced_search\"\n                    className=\"ant-advanced-search-form\"\n                    onFinish={onFinish}\n                    >\n                    <Row gutter={24}>\n                        <Col span={6}>\n                            <Form.Item\n                                name=\"id\"\n                                label=\"字典ID：\"\n                                >\n                                <Input  placeholder=\"请输入字典ID\"/>\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item\n                                name=\"name\"\n                                label=\"字典名称：\"\n                                >\n                                <Input placeholder=\"请输入字典名称\"/>\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item\n                                name=\"type\"\n                                label=\"字典类型：\"\n                                >\n                                <Input placeholder=\"请输入字典类型\"/>\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item\n                                name=\"status\"\n                                label=\"字典状态：\"\n                                >\n                                <Input.Group compact>\n                                    <Select defaultValue=\"全部\" style={{ width: '100%' }}>\n                                        <Option>全部</Option>\n                                        <Option value=\"1\">已启用</Option>\n                                        <Option value=\"0\">已停用</Option>\n                                    </Select>\n                                  \n                                </Input.Group>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={24}>\n                        <Col span={8}>\n                            <Form.Item\n                                name=\"rqdsds\"\n                                label=\"创建时间：\"\n                                >\n                                    <RangePicker\n                                        showTime={{\n                                            format: 'HH:mm',\n                                        }}\n                                        format=\"YYYY-MM-DD HH:mm\"\n                                    />\n                            </Form.Item>\n                        </Col>\n                        <Col span={8}>\n                            <Form.Item\n                                name=\"notfsfdsdgfe\"\n                                label=\"更新时间：\"\n                                >\n                            <RangePicker\n                                    showTime={{\n                                        format: 'HH:mm',\n                                    }}\n                                    format=\"YYYY-MM-DD HH:mm\"\n                                />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Button type=\"primary\" className={styles.search} onClick={() => {\n                            setInfo(val => ({\n                                ...val,\n                                num: val.num+= 1\n                            }))\n                        }}>查询</Button>\n                        <Button>重置</Button>\n                    </Row>\n                </Form>\n                    \n            </main>\n            <div className={styles.table}>\n                <Table columns={columns} loading={loading} dataSource={data} pagination={false}/>\n                <Pagination size=\"small\" className={styles.roleTable} total={50} showTotal={showTotal} showSizeChanger showQuickJumper/>\n            </div>\n            <PersonContext.Provider value={info}>\n                <Xchild cRef={box}>\n                    <Table columns={columns} loading={loading} dataSource={data} pagination={false}/>\n                    <Pagination size=\"small\" className={styles.roleTable} total={50} showTotal={showTotal} showSizeChanger showQuickJumper/>\n                </Xchild>\n            </PersonContext.Provider>\n        </div>\n    )\n   \n}\nexport default Dictionary"],"names":["prop","children","styleObj","type","onClick","style","className","styles","PersonContext","createContext","e","info","useContext","wocao","val","useEffect","console","log","useImperativeHandle","cRef","num","sourData","key","id","name","status","updatedTime","remark","createdTime","itemQty","lastOperator","tags","RangePicker","DatePicker","labelCol","width","Form","formUser","madolForm","useState","setInfo","loading","setLoading","isModalVisible","setIsModalVisible","isedit","setIsedit","editObj","setEditObj","data","setData","navigate","useNavigate","box","useRef","Option","Select","timer","setTimeout","clearTimeout","getList","showTotal","total","CancelModal","resetFields","columns","title","dataIndex","render","text","obj","reander","placement","sorter","a","b","setFieldsValue","state","visible","onOk","onCancel","footer","form","onFinish","label","validateTrigger","rules","required","message","showCount","maxLength","marginRight","validateFields","then","catch","erre","htmlType","values","gutter","span","placeholder","compact","defaultValue","value","showTime","format","dataSource","pagination","size","showSizeChanger","showQuickJumper","Provider"],"sourceRoot":""}